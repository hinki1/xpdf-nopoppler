#! /bin/sh /usr/share/dpatch/dpatch-run
## 05_gmem.dpatch by  <hamish@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Change all size parameters to size_t (why?)

@DPATCH@
diff -urNad --exclude=CVS --exclude=.svn ./goo/gmem.c /tmp/dpep-work.0qyf6L/xpdf-3.01/goo/gmem.c
--- ./goo/gmem.c	2005-08-19 19:02:18.000000000 +1000
+++ /tmp/dpep-work.0qyf6L/xpdf-3.01/goo/gmem.c	2005-08-19 19:05:34.000000000 +1000
@@ -54,9 +54,9 @@
 
 #endif /* DEBUG_MEM */
 
-void *gmalloc(int size) {
+void *gmalloc(size_t size) {
 #ifdef DEBUG_MEM
-  int size1;
+  size_t size1;
   char *mem;
   GMemHdr *hdr;
   void *data;
@@ -96,11 +96,11 @@
 #endif
 }
 
-void *grealloc(void *p, int size) {
+void *grealloc(void *p, size_t size) {
 #ifdef DEBUG_MEM
   GMemHdr *hdr;
   void *q;
-  int oldSize;
+  size_t oldSize;
 
   if (size == 0) {
     if (p)
@@ -137,8 +137,8 @@
 #endif
 }
 
-void *gmallocn(int nObjs, int objSize) {
-  int n;
+void *gmallocn(int nObjs, size_t objSize) {
+  size_t n;
 
   n = nObjs * objSize;
   if (objSize == 0 || n / objSize != nObjs) {
@@ -148,8 +148,8 @@
   return gmalloc(n);
 }
 
-void *greallocn(void *p, int nObjs, int objSize) {
-  int n;
+void *greallocn(void *p, int nObjs, size_t objSize) {
+  size_t n;
 
   n = nObjs * objSize;
   if (objSize == 0 || n / objSize != nObjs) {
@@ -161,7 +161,7 @@
 
 void gfree(void *p) {
 #ifdef DEBUG_MEM
-  int size;
+  size_t size;
   GMemHdr *hdr;
   GMemHdr *prevHdr, *q;
   int lst;
diff -urNad --exclude=CVS --exclude=.svn ./goo/gmem.h /tmp/dpep-work.0qyf6L/xpdf-3.01/goo/gmem.h
--- ./goo/gmem.h	2005-08-19 19:02:18.000000000 +1000
+++ /tmp/dpep-work.0qyf6L/xpdf-3.01/goo/gmem.h	2005-08-19 19:04:24.000000000 +1000
@@ -19,13 +19,13 @@
  * Same as malloc, but prints error message and exits if malloc()
  * returns NULL.
  */
-extern void *gmalloc(int size);
+extern void *gmalloc(size_t size);
 
 /*
  * Same as realloc, but prints error message and exits if realloc()
  * returns NULL.  If <p> is NULL, calls malloc instead of realloc().
  */
-extern void *grealloc(void *p, int size);
+extern void *grealloc(void *p, size_t size);
 
 /*
  * These are similar to gmalloc and grealloc, but take an object count
@@ -33,8 +33,8 @@
  * bytes, but there is an additional error check that the total size
  * doesn't overflow an int.
  */
-extern void *gmallocn(int nObjs, int objSize);
-extern void *greallocn(void *p, int nObjs, int objSize);
+extern void *gmallocn(int nObjs, size_t objSize);
+extern void *greallocn(void *p, int nObjs, size_t objSize);
 
 /*
  * Same as free, but checks for and ignores NULL pointers.
